" command moving
cnoremap <C-A> <Home>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>

vmap > >gv
vmap < <gv
map Y y$

set rnu

autocmd BufRead *.txt set tw=500
"autocmd BufWinLeave * if expand('%') != '' && &buftype == '' | mkview | endif
"autocmd BufRead     * if expand('%') != '' && &buftype == '' | silent loadview | syntax on | endif
au BufNewFile *.py :call append(0, ["#!/usr/bin/env python", "# -*- coding: utf-8 -*-", ""])
au FileType python map <leader>pyh :call append(0, ["#!/usr/bin/env python", "# -*- coding: utf-8 -*-", ""])<cr>
au BufNewFile *.sh :call append(0, ["#!/bin/bash", ""])
au FileType sh map <leader>shh :call append(0, ["#!/bin/bash", ""])<cr>

if has("patch-7.4.1500")
    set foldmethod=marker
endif
"set keywordprg=

if has('nvim')
	let $NVIM_TUI_ENABLE_TRUE_COLOR=1

    if has('win32')
        colorscheme molokai
    else
        let $TERM="xterm-256color"
    endif

    tnoremap <Esc> <C-\><C-n>
    tnoremap <A-h> <C-\><C-n><C-w>h
    tnoremap <A-j> <C-\><C-n><C-w>j
    tnoremap <A-k> <C-\><C-n><C-w>k
    tnoremap <A-l> <C-\><C-n><C-w>l

    map <leader>s :vs<cr>:term bash<cr>

    if has('unix')
        let g:python_host_skip_check = 1
        let g:python_host_prog = '/usr/bin/python'
    end

    set icm=split
else
    set t_Co=256
endif

" json format and json lint
nmap <leader>jq :%!$VIMFILES/tools/jq --indent 4 .<cr>:w<cr>
nmap <leader>jc :%!$VIMFILES/tools/jq -c .<cr>:w<cr>
nmap <leader>jf :%!$VIMFILES/tools/jq --indent 4 -S .<cr>:w<cr>
nmap <leader>jr :%!$VIMFILES/tools/jq -c -S .<cr>:w<cr>
nmap <leader>jl :!$VIMFILES/tools/jq -c . % 1>/dev/null<cr>
vmap <leader>jl :'<,'>!$VIMFILES/tools/jq -c . % 1>/dev/null<cr>
vmap <leader>jq :'<,'>!$VIMFILES/tools/jq --indent 4 .<cr>:w<cr>

if v:version >= 704
    function! Undo()
        let l:tmpdir=expand('$VIMFILES/undo')

        if !isdirectory(l:tmpdir)
            call system('mkdir ' . l:tmpdir)
        endif

        let &undodir=l:tmpdir
        set undofile
        set undolevels=500 "maximum number of changes that can be undone
    endfunction

    call Undo()
endif
